[package]
name = "hyper_app"
version = "0.1.0"
edition = "2021"
rust-version = "1.65"

[dependencies]
egui = "0.21.0"
eframe = { version = "0.21.0", default-features = false, features = [
    # "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    # "persistence",   # Enable restoring app state when restarting the app.
] }
epaint = "0.21.0"
egui_demo_lib = { version = "0.21.0", features = ["syntect"] }
egui_extras = "0.21.0"

# You only need serde if you want app persistence:
serde = { version = "1", optional = true, features = ["derive"] }

enum-map = { version = "2", features = ["serde"] }
log = { version = "0.4.6" }
thiserror = "1.0.38"

lazy_static = "1.4.0"

ehttp = { version = "0.2.0" }
# image = { version = "0.24", optional = true, default-features = false, features = [
#   "jpeg",
#   "png",
# ] }
serde_json = "1.0.79" # Serde serializion/deserialization of JSON data.

wasm-rs-dbg = "0.1.2"

chrono = "0.4.23"

serde_qs = "0.12.0"
crossbeam-queue = "0.3.8"
# hyper_ast_client = {path = "../client", package="client"}

hyper_ast = { path = "../hyper_ast", default-features = false, features = [
    "serialize",
    "web",
] }
hyper_ast_gen_ts_cpp = { path = "../gen/tree-sitter/cpp", default-features = false }
hyper_ast_gen_ts_java = { path = "../gen/tree-sitter/java", default-features = false }
hyper_ast_gen_ts_xml = { path = "../gen/tree-sitter/xml", default-features = false }
egui_addon = { path = "../egui_addon" }

nohash-hasher = "0.2.0"

egui_cable = "0.5.0"

enumset = "1.0.12"


# TODO put it behind a feature
autosurgeon = "0.7.1"
automerge = { version = "0.4.0" }
# used to add extra-traits flag needed by code in autosurgeon-derive
syn = { version = "2", features = ["full", "extra-traits"] }
async_executors = "0.6"
futures-util = { version = "0.3", default-features = false, features = ["sink", "std"] }
futures = "0.3"
tokio-tungstenite-wasm = { version = "0.1.0" }
http = "0.2.6" # Types for HTTP requests and responses.

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
poll-promise = { version = "0.2", default-features = false }
tracing-subscriber = "0.3"
tree-sitter-javascript = "0.20.0"
tree-sitter = { version = "0.9.1", package = "tree-sitter-facade-sg" }
tree-sitter-highlight = "0.20.1"
tree-sitter-native = { version = "0.20.9", package = "tree-sitter" }
tokio = {version="1.26.0", features=["rt","rt-multi-thread"]}

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
gloo-timers = "0.2.6"
poll-promise = { version = "0.2", default-features = false, features = ["web"] }
console_error_panic_hook = "0.1.6"
tracing-wasm = "0.2"
tree-sitter = { version = "0.9.1", package = "tree-sitter-facade-sg" }
web-tree-sitter-sg = "1.3"
wasm-bindgen = { version = "0.2.84", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.34"
serde-wasm-bindgen = "0.4"
js-sys = "0.3"
# wasm-bindgen-futures = "0.4"
wasm-logger = "0.2.0"

[dependencies.syntect]
version = "5"
features = ["default-fancy"]
default-features = false

[features]
default = ["serde"]

# Allow serialization using [`serde`](https://docs.rs/serde).
serde = ["egui/serde", "dep:serde"]
syntect = []

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2

[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }

[package]
name = "backend"
version = "0.2.0"
edition = "2021"

[dependencies]
tree-sitter = { workspace = true }
tree-sitter-cli = "0.23.0"
hyperast = { workspace = true, default-features = false, features = [
    "serialize",
] }
hyperast_gen_ts_cpp = { workspace = true }
hyperast_gen_ts_java = { workspace = true }
hyperast_gen_ts_xml = { workspace = true }
hyper_diff = { workspace = true }
hyperast_vcs_git = { workspace = true }
hyperast_gen_ts_tsquery = { workspace = true }
hyperast_tsquery =  { workspace = true }
polyglote = { workspace = true, optional = true }

# env_logger = "0.9.0"
log = { version = "0.4.6" }

## scripting

rhai = { version = "1.12.0", features = ["sync", "serde"] }
average = "0.13.1"

## http server
axum = { version = "=0.7.4", features = [
    "ws",
] } # Web framework that focuses on ergonomics and modularity.
hyper = { version = "1.4.1", features = [
    "full",
] } # A fast and correct HTTP library.
tokio = { version = "1.17.0", features = [
    "full",
] } # Event-driven, non-blocking I/O platform.
tower = { version = "0.5.0", features = [
    "full",
] } # Modular reusable components for building robust clients and servers.
serde = { version = "1.0.136", features = [
    "derive",
] } # A serialization/deserialization framework.

# try crdt with ws https://github.com/tokio-rs/axum/blob/main/examples/websockets/Cargo.toml
futures = "0.3"
futures-util = { version = "0.3", default-features = false, features = [
    "sink",
    "std",
] }
headers = "0.4.0"

serde_json = "1.0.79" # Serde serializion/deserialization of JSON data.
once_cell = "1.10.0" # Single assignment cells and lazy values.
base64 = "0.13" # Encode and decode base64 as bytes or utf8.
http = "1.1.0" # Types for HTTP requests and responses.
tracing = "0.1.32" #  Application-level tracing for Rust.
tracing-subscriber = { version = "0.3.9", features = [
    "env-filter",
] } # Utilities for implementing and composing `tracing` subscribers.
axum-extra = { version = "=0.9.2", features = [
    "typed-header",
] } # fallbacks for access levels, use typed-routing feature if needed

tower-http = { version = "0.5.2", features = [
    "add-extension",
    "auth",
    "compression-full",
    "limit",
    "trace",
    "fs",
    "cors",
] }
tower-layer = "0.3.3"
axum-macros = "0.4.1"

nohash-hasher = "0.2.0"

serde-aux = "4.1.2"

dashmap = { version = "5.4.0", features = ["raw-api"] }

enumset = "1.0.12"
num = "0.4.0"

# sharing feature
autosurgeon = "0.7.1"
automerge = { version = "0.4.0" }
# used to add extra-traits flag needed by code in autosurgeon-derive
syn = { version = "2", features = ["full", "extra-traits"] }

clap = { version = "3.0", features = ["derive"] }

hashbrown = "0.14.5"

tree-sitter-graph = { workspace = true, optional = true }
# tree-sitter-stack-graphs = { git = "https://github.com/quentinLeDilavrec/stack-graphs", rev = "d0fa507d4b3892b1db60938f37bf4779f9dae18d", optional = true }
# stack-graphs = { git = "https://github.com/quentinLeDilavrec/stack-graphs", rev = "d0fa507d4b3892b1db60938f37bf4779f9dae18d", optional = true }
# tree-sitter-stack-graphs = { version = "0.9.0", optional = true }
# stack-graphs = { version = "0.14.0", optional = true }

rerun = { version = "0.20.2", default-features = false, features = [
    "log",
    "sdk",
], optional = true }


graphql_client = { version = "0.14.0" }
hyper-rustls = "0.27.2"
hyper-util = { version = "0.1", default-features = false, features = [
    "client-legacy",
    "tokio",
] }
rustls = { version = "0.23" }
http-body-util = "0.1.2"


[target.'cfg(not(target_env = "msvc"))'.dependencies]
jemallocator = "0.5.0"

[dev-dependencies]
reqwest = { version = "0.12.5", features = ["blocking"] }


[features]
# default = ["rerun", "tsg"]
# default = ["tsg"]
tsg = [
    "dep:tree-sitter-graph",
    # "dep:stack-graphs",
    # "dep:tree-sitter-stack-graphs",
    "hyperast_tsquery/tsg",
    "hyperast_vcs_git/tsg",
]
rerun = ["dep:rerun", "dep:polyglote"]
subtree-stats = [
    "hyperast_gen_ts_java/subtree-stats"
]

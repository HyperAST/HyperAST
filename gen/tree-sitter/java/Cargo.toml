[package]
name = "hyper_ast_gen_ts_java"
version = "0.2.0"
edition = "2021"
include = ["/src", "tree-sitter-java/"]

[dependencies]
tree-sitter = { workspace = true, optional = true }
# tree-sitter-java = {path="tree-sitter-java", version="0.20.0"}
# tree-sitter-java = { git = "https://github.com/quentinLeDilavrec/tree-sitter-java", version = "0.21.0", rev = "7699d4a296ca27fc14511bc75a1a899327f483fc", optional = true }
tree-sitter-java = { version = "0.23.0", optional = true }
# tree-sitter-java = { path="../../../../tree-sitter-java", version = "0.21.0", optional = true }
atomic-counter = "1.0.1"
num = "0.4.0"
bitvec = "1.0.1"
# stack-graphs = "=0.3.0"
controlled-option = "0.4.1"
string-interner = { version = "0.17.0", optional = true}
cfg-if = "1.0"
hashbrown = { version = "0.14.5", default-features = false, optional = true }
# fasthash = "0.4.0"
log = { version = "0.4.6" } #, features = ["max_level_debug", "release_max_level_warn"] }

hyper_ast = { path = "../../../hyper_ast", default-features = false }
# hyper_ast = { workspace = true, default-features = false } # issue with hyper_app + wasm
tree-sitter-graph = { workspace = true, optional = true }
# tree-sitter-stack-graphs = { git = "https://github.com/quentinLeDilavrec/stack-graphs", rev="d0fa507d4b3892b1db60938f37bf4779f9dae18d", optional = true }
# stack-graphs = { git = "https://github.com/quentinLeDilavrec/stack-graphs", rev="d0fa507d4b3892b1db60938f37bf4779f9dae18d", optional = true}
# tree-sitter-stack-graphs = { version = "0.9.0", optional = true }
stack-graphs = { version = "0.14.0", optional = true}

libc = "0.2"

legion = { version = "0.4.0", optional = true }
tuples = "=1.4.1"

enumset = "1.0.8"

serde = { version = "1.0.130" }

# for type stuff
paste = "1.0.12"

ref-cast = "1.0" # help with transparent unit structs, it makes proper layout assertions

[build-dependencies]
cc = "*"

[dev-dependencies]
pretty_assertions = "1.0.0"
env_logger = "0.11.3"
criterion = { version = "0.5.1", features = ["rayon", "plotters", "cargo_bench_support", "html_reports", "real_blackbox"] }
hyper_ast_tsquery = { workspace = true }
hyper_ast_gen_ts_tsquery = { workspace = true }

[[example]]
name = "querying"
required-features = ["impl", "tsg", "all_examples"]

[[example]]
name = "tsg"
required-features = ["impl", "tsg", "all_examples"]

[[example]]
name = "querying_immediate_pred"
required-features = ["impl", "tsg", "all_examples"]

[[example]]
name = "querying_precompute"
required-features = ["impl", "tsg", "all_examples"]

[[bench]]
name = "querying_precompute"
harness = false

[[bench]]
name = "querying_precompute_repeat"
harness = false

[[bench]]
name = "querying_precompute_repeat2"
harness = false

[[bench]]
name = "querying_precompute_repeat3"
harness = false

[[bench]]
name = "querying_precompute_repeat4"
harness = false

[features]
default = ["impl"]
legion = ["hyper_ast/legion", "dep:legion"]
impact = ["dep:string-interner"] # TODO cleanly separate feature, for now impl needs it
impl = [
    "hyper_ast/jemalloc",
    "legion",
    "hyper_ast/native",
    "dep:hashbrown",
    "hashbrown?/ahash",
    "dep:tree-sitter",
    "dep:tree-sitter-java",
    "hyper_ast/ts",
]
tsg = [
    # "dep:tree-sitter-graph",
    # "dep:stack-graphs",
    # "dep:tree-sitter-stack-graphs",
]
subtree-stats=["hyper_ast/subtree-stats"]
all_examples=[]
